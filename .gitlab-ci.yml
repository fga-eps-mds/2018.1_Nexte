# Official docker image.
image: docker:latest

variables:
  ANDROID_CONTAINER_IMAGE: baldissera/android-container
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"
  
services:
  - docker:dind

before_script:
  - gem install bundler
  - bundle install

after_script:
  - rm /key.json
  - rm /project/keystore.properties

stages:
  - test
  - build
  - deploy

static_analysis:
  stage: test
  script:
    - docker run -v $(pwd)/project:/application -v $(pwd)/docker/local.properties:/application/local.properties baldissera/android-container /bin/bash "/static_analysis.sh"
  artifacts:
    name: "reports_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
    when: always
    expire_in: 2 days
    paths:
      - project/app/build/reports/

unit_test:
  stage: test
  script:
    - docker run -v $(pwd)/project:/application -v $(pwd)/docker/local.properties:/application/local.properties baldissera/android-container /bin/bash "/test.sh"
  artifacts:
    name: "reports_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
    when: always
    expire_in: 2 days
    paths:
      - project/app/build/reports/tests/

# instrumentation_tests:
#   stage: test

build:
  stage: build
  script:
    - echo $KEYSTORE_PROPERTIES > /project/keystore.properties
    - docker run -v $(pwd)/project:/application -v $(pwd)/docker/local.properties:/application/local.properties baldissera/android-container /bin/bash "/build.sh"
  artifacts:
    paths:
    - project/app/build/outputs/apk

deploy_beta:
  stage: deploy
  script:
    - echo $DEPLOY_KEY_FILE > /key.json
    - cd project
    - bundle exec fastlane beta
  dependencies:
    - build
  artifacts:
    paths:
      - fastlane/logs

# This config is for run docker-compose
# before_script:
#   - apk add --no-cache py-pip
#   - pip install docker-compose